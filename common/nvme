#!/bin/bash
#
# Default helper functions for NVMe devices.
#
# Copyright (C) 2018 Johannes Thumshirn
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

_test_dev_is_nvme() {
	if ! readlink -f "$TEST_DEV_SYSFS/device" | grep -q nvme; then
		SKIP_REASON="$TEST_DEV is not a NVMe device"
		return 1
	fi
	return 0
}

_create_nvmet_port()
{
	trtype=$1
	nvmet_cfs="/sys/kernel/config/nvmet/"

	port=$(ls ${nvmet_cfs} | wc -l)
	port=$((port + 1))

	mkdir ${nvmet_cfs}/ports/${port}
	echo ${trtype} > ${nvmet_cfs}/ports/${port}/addr_trtype

	echo ${port}
}

_remove_nvmet_port()
{
	port=$1
	nvmet_cfs="/sys/kernel/config/nvmet/"
	rmdir ${nvmet_cfs}/ports/${port}
}

_create_nvmet_subsystem()
{
	nvmet_subsystem=$1;
	blkdev=$2
	nvmet_cfs="/sys/kernel/config/nvmet/"
	cfs_path="${nvmet_cfs}/subsystems/${nvmet_subsystem}"

	mkdir -p ${cfs_path}
	echo 1 > ${cfs_path}/attr_allow_any_host
	mkdir ${cfs_path}/namespaces/1
	echo -n $blkdev > ${cfs_path}/namespaces/1/device_path
	echo -n 1 > ${cfs_path}/namespaces/1/enable
}

_remove_nvmet_subsystem()
{
	nvmet_subsystem=$1;
	nvmet_cfs="/sys/kernel/config/nvmet/"
	cfs_path="${nvmet_cfs}/subsystems/${nvmet_subsystem}"

	echo 0 > ${cfs_path}/namespaces/1/enable
	rmdir ${cfs_path}/namespaces/1/
	rmdir ${cfs_path}
}

_add_nvmet_subsys_to_port()
{
	port=$1;
	nvmet_subsystem=$2;
	nvmet_cfs="/sys/kernel/config/nvmet/"

	ln -s ${nvmet_cfs}/subsystems/${nvmet_subsystem} \
		${nvmet_cfs}/ports/${port}/subsystems/${nvmet_subsystem}
}

_remove_nvmet_subsystem_from_port()
{
	port=$1;
	nvmet_subsystem=$2;
	nvmet_cfs="/sys/kernel/config/nvmet/"

	rm ${nvmet_cfs}/ports/${port}/subsystems/${nvmet_subsystem}
}

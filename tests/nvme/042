#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2021 Hannes Reinecke, SUSE Labs
#
# Test hash and dh group variations for authenticated connections

. tests/nvme/rc

DESCRIPTION="Test hash and DH group variations for authenticated connections"
QUICK=1

requires() {
	_nvme_requires
	_have_loop
	_require_nvme_trtype_is_fabrics
	_require_nvme_cli_auth
}


test() {
	local port
	local subsys_name="blktests-subsystem-1"
	local hostid="$(uuidgen)"
	local hostnqn="nqn.2014-08.org.nvmexpress:uuid:${hostid}"
	local file_path="${TMPDIR}/img"
	local hostkey
	local ctrldev

	echo "Running ${TEST_NAME}"

	_setup_nvmet

	truncate -s 512M "${file_path}"

	_create_nvmet_subsystem "${subsys_name}" "${file_path}"
	port="$(_create_nvmet_port "${nvme_trtype}")"
	_add_nvmet_subsys_to_port "${port}" "${subsys_name}"
	_create_nvmet_host "${subsys_name}" "${hostnqn}" "${hostkey}"

	for hash in "hmac(sha256)" "hmac(sha384)" "hmac(sha512)" ; do

		echo "Testing hash ${hash}"

		_set_nvmet_hash "${hostnqn}" "${hash}"

		_nvme_connect_subsys "${nvme_trtype}" "${subsys_name}" \
				     "${def_traddr}" "${def_trsvcid}" \
				     "${hostnqn}" "${hostid}" \
				     "${hostkey}"
		if [ $? -ne 0 ] ; then
			echo "nvme connect failed"
		fi

		udevadm settle

		_nvme_disconnect_subsys "${subsys_name}"
	done

	for dhgroup in "ffdhe2048" "ffdhe3072" "ffdhe4096" "ffdhe6144" "ffdhe8192" ; do

		echo "Testing DH group ${dhgroup}"

		_set_nvmet_dhgroup "${hostnqn}" "${dhgroup}"

		_nvme_connect_subsys "${nvme_trtype}" "${subsys_name}" \
				     "${def_traddr}" "${def_trsvcid}" \
				     "${hostnqn}" "${hostid}" \
				     "${hostkey}"

		if [ $? -ne 0 ] ; then
			echo "nvme connect failed"
		fi

		udevadm settle

		_nvme_disconnect_subsys "${subsys_name}"
	done

	_remove_nvmet_subsystem_from_port "${port}" "${subsys_name}"
	_remove_nvmet_subsystem "${subsys_name}"

	_remove_nvmet_port "${port}"

	_remove_nvmet_host "${hostnqn}"

	rm ${file_path}

	echo "Test complete"
}
